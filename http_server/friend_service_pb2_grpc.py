# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import friend_service_pb2 as friend__service__pb2


class FriendStub(object):
  """User interface exported by the server.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Followees = channel.unary_unary(
        '/friend.Friend/Followees',
        request_serializer=friend__service__pb2.FolloweesRequest.SerializeToString,
        response_deserializer=friend__service__pb2.FolloweesResponse.FromString,
        )
    self.Follows = channel.unary_unary(
        '/friend.Friend/Follows',
        request_serializer=friend__service__pb2.FollowsRequest.SerializeToString,
        response_deserializer=friend__service__pb2.FollowsResponse.FromString,
        )


class FriendServicer(object):
  """User interface exported by the server.
  """

  def Followees(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Follows(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FriendServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Followees': grpc.unary_unary_rpc_method_handler(
          servicer.Followees,
          request_deserializer=friend__service__pb2.FolloweesRequest.FromString,
          response_serializer=friend__service__pb2.FolloweesResponse.SerializeToString,
      ),
      'Follows': grpc.unary_unary_rpc_method_handler(
          servicer.Follows,
          request_deserializer=friend__service__pb2.FollowsRequest.FromString,
          response_serializer=friend__service__pb2.FollowsResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'friend.Friend', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
